version: '3.8'

services:
  nginx:
    container_name: nginx
    image: "nginx:stable-alpine"
    ports:
      - 8000:80
    environment:
      - VIRTUAL_HOST=api.localhost
    volumes:
      - ./configs/nginx.conf/:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www/laravel
    networks:
      - backend

  # apache:
  #   image: httpd:latest
  #   container_name: apache
  #   ports:
  #     - '80:80'
  #   volumes:
  #     # - ./configs/apache.conf:/usr/local/apache2/conf/httpd.conf
  #     - ./src:/var/www/laravel

  nodejs:
    container_name: nodejs
    environment:
      - PORT=5174
    build:
      context: dockerfiles
      dockerfile: nodejs.Dockerfile
    ports:
      - 5174:5174
    volumes:
      - ./src:/var/www/laravel
    networks:
      - backend

  php:
    container_name: php
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    networks:
      - backend

  mysql:
    container_name: mysql
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - backend

  phpmyadmin:
    container_name: pma
    image: phpmyadmin:5.2
    ports:
      - 81:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      PMA_PORT: 3306
      UPLOAD_LIMIT: 8M
    networks:
      - backend

  # вспомогательные контейнеры
  composer:
    container_name: composer
    build:
      context: dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    networks:
      - backend

  artisan:
    container_name: artisan
    build:
      context: dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/laravel
    entrypoint: [ "php", "/var/www/laravel/artisan" ]
    networks:
      - backend

networks:
  backend:
    driver: bridge
